{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","errorInfo","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,sBAAKG,UAAU,KAAf,UACE,mCAAMF,KACN,4BAAIC,WCQGI,EAbE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAClC,OACE,cAAC,EAAD,CACMX,GAAIO,EAAOI,GAAGX,GACdC,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHZS,MAOf,OAAO,8BAAMH,KCCAI,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACI,8BACE,uBAAOV,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEVI,G,MARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,aCkBEC,E,kDApBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG3B,WAEE,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKX,MAAMK,a,GAjBKQ,aCkDZC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAdzC,EAAKZ,MAAQ,CACXlB,OAAQ,GACR4B,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACvB,OAAQmC,S,oBAO1C,WACE,MAA8Bb,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQ4B,EAAf,EAAeA,YACTQ,EAAiBpC,EAAOqC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAE3D,OAAsB,IAAlBvC,EAAOyC,OAEF,yCAGL,sBAAK7C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQoC,e,GApCVZ,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73faa6f2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"bg-light-green dib pa3 br3 ma2 grow bw2 shadow-5\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\n      <div className=\"tc\">\n        <h2> {name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  const cardArray = robots.map((user, i) => {\n    return (\n      <Card key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n      />\n    );\n  })\n  return <div>{cardArray}</div>\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return (\n      <div>\n        <input className='pa3 ba b--green bg-lightest-blue'\n               type='search'\n               placeholder='search robots'\n               onChange={searchChange}\n        />\n      </div>\n)\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll;","import React, {Component} from \"react\";\n\nclass ErrorBoundry extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({hasError: true})\n  }\n\n  render ()\n  {\n    if (this.state.hasError) {\n      return <h1>Oooops. That is not good</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","import React, { Component } from \"react\";\nimport CardList from \"../Components/CardList\";\nimport SearchBox from \"../Components/SearchBox\";\nimport \"./App.css\"\nimport Scroll from \"../Components/Scroll\";\nimport ErrorBoundry from \"../Components/ErrorBoundry\";\n\nclass App extends Component\n{\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({robots: users}))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n\n  render() {\n    const {robots, searchfield} = this.state\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n})\nif (robots.length === 0)\n{\n  return <h1>Loading</h1>\n} else {\n  return (\n    <div className='tc'>\n      <h1 className=\"f1\">RoboFriends</h1>\n      <SearchBox searchChange={this.onSearchChange}/>\n      <Scroll>\n        <ErrorBoundry>\n          <CardList robots={filteredRobots} />\n        </ErrorBoundry>\n      </Scroll>\n    </div>\n  );\n}\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\n//import App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}